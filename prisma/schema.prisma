// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite"
    // NOTE: When using postgresql, mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}


model Date {
    id String @id @default(cuid())
    events Event[]
    periodsIn Period[] @relation("periodInitialDate")
    periodsOut Period[] @relation("periodFinalDate")
    personaBirth Persona[] @relation("personaBirthDate")
    personaDeath Persona[] @relation("personaDeathDate")
    date DateTime
}

model Tag{
    id String @id @default(cuid())
    name String @unique
    //icon?
    events Event[]
    periods Period[]
    persona Persona[]
}

model Event {
    id String @id @default(cuid())
    date Date @relation(fields: [dateId], references: [id])
    dateId String @unique
    approximationFuture Int?
    approximationCenter Int?
    tags Tag[]
    title String
    description String
    more String?
}

model Period {
    id String @id @default(cuid())
    initialDate Date @relation("periodInitialDate", fields: [initialDateId], references: [id])
    initialDateId String @unique
    finalDate Date? @relation("periodFinalDate", fields: [finalDateId], references: [id])
    finalDateId String? @unique
    tags Tag[]
    title String
    description String
    more String?
}

model Persona {
    id String @id @default(cuid())
    birthDate Date @relation("personaBirthDate", fields: [birthDateId], references: [id])
    birthDateId String @unique
    deathDate Date? @relation("personaDeathDate", fields: [deathDateId], references: [id])
    deathDateId String? @unique
    approximationsOnDates String?
    tags Tag[]
    name String
    description String
    more String?
}


//the default example
model Example {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? // @db.Text
    access_token      String? // @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? // @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
